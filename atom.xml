<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杜若喃呢</title>
  <subtitle>山中人兮芳杜若</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://duruonanni.github.io/"/>
  <updated>2017-05-15T00:10:17.107Z</updated>
  <id>http://duruonanni.github.io/</id>
  
  <author>
    <name>Xiangyu Kong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo建站流程</title>
    <link href="http://duruonanni.github.io/blog/%E5%BB%BA%E7%AB%99%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/20170509/"/>
    <id>http://duruonanni.github.io/blog/建站流程记录/20170509/</id>
    <published>2017-05-08T16:20:40.797Z</published>
    <updated>2017-05-15T00:10:17.107Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在之前的话"><a href="#写在之前的话" class="headerlink" title="写在之前的话"></a>写在之前的话</h2><p>本文是笔者在搭建本站时收集记录的建站过程.在搭建过程中,由于相关知识的匮缺,看不懂一些教程中省略的部分或是一些专业术语,走了一些弯路.但磕绊终究是成功建好了本站.也有了此小文.<br><strong>本文适用于对Hexo建站感兴趣但畏惧专业术语的非科班出身同学.我其中对一些网上多数教程稍省略不清楚的地方进行了解释.</strong> 希望能帮助到需要的人.<br><em>由于笔者也只是前端和建站的初学者,多有不足之处,还望批评指正.</em>  </p>
<h3 id="本文主要参考了"><a href="#本文主要参考了" class="headerlink" title="本文主要参考了:"></a>本文主要参考了:</h3><blockquote>
<ul>
<li>Setsuna’s Blog : <a href="http://www.isetsuna.com/hexo/introduction/" title="Hexo博客系列" target="_blank" rel="external">Hexo博客系列</a></li>
<li>up主:SnowHotarubi的视频教程 : <a href="http://www.bilibili.com/video/av9185310" title="搭载个人网站竟如此简单" target="_blank" rel="external">搭载个人网站竟如此简单系列</a></li>
<li><a href="https://hexo.io" title="hexo官方文档" target="_blank" rel="external">hexo官方文档</a>  </li>
</ul>
</blockquote>
<h3 id="我使用的软件版本"><a href="#我使用的软件版本" class="headerlink" title="我使用的软件版本:"></a>我使用的软件版本:</h3><table>
<thead>
<tr>
<th style="text-align:center">softwares</th>
<th style="text-align:center">edition</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">OS</td>
<td style="text-align:center">Windows 10-x64 10563 创意者更新正式版</td>
</tr>
<tr>
<td style="text-align:center">Node.js</td>
<td style="text-align:center">v6.10.2-x64</td>
</tr>
<tr>
<td style="text-align:center">git</td>
<td style="text-align:center">2.12.2.2-x64</td>
</tr>
<tr>
<td style="text-align:center">hexo</td>
<td style="text-align:center">3.3.5</td>
</tr>
</tbody>
</table>
<h2 id="一-环境搭建"><a href="#一-环境搭建" class="headerlink" title="一. 环境搭建"></a>一. 环境搭建</h2><h3 id="1-下载并安装-Node-js"><a href="#1-下载并安装-Node-js" class="headerlink" title="1) 下载并安装 Node.js"></a>1) 下载并安装 <a href="https://nodejs.org/en/" title="Node.js" target="_blank" rel="external">Node.js</a></h3><h3 id="2-下载并安装git"><a href="#2-下载并安装git" class="headerlink" title="2) 下载并安装git"></a>2) 下载并安装<a href="https://git-scm.com" title="git" target="_blank" rel="external">git</a></h3><p>说明: </p>
<blockquote>
<ul>
<li>以上<code>Node.js</code>是Hexo需要的运行环境;<code>git</code>用于网站的发布与托管.下载后全部按照默认要求安装即可.  </li>
</ul>
</blockquote>
<p>ATT: </p>
<blockquote>
<ul>
<li>若git安装完成后在<em>文件管理器</em>中右键无<code>Git bash here</code>选项,参考此教程:<em><a href="http://blog.csdn.net/u014527912/article/details/51723735" title="右键添加gitbash" target="_blank" rel="external">右键-添加Git Bash Here菜单</a></em>  </li>
</ul>
</blockquote>
<h2 id="二-Hexo的安装和blog文件夹的初始化"><a href="#二-Hexo的安装和blog文件夹的初始化" class="headerlink" title="二. Hexo的安装和blog文件夹的初始化"></a>二. Hexo的安装和blog文件夹的初始化</h2><h3 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1) 安装hexo"></a>1) 安装hexo</h3><p>方法: </p>
<blockquote>
<ul>
<li>打开新安装的<code>git bash</code>软件,在其中输入    <code>npm install hexo-cli -g</code>,<strong>回车确认</strong>  </li>
</ul>
</blockquote>
<p>ATT:</p>
<blockquote>
<ul>
<li>在<code>git bash</code>中输入的所有代码都要以<strong>回车确认</strong>才有效;</li>
<li>可为避免输入错误,可直接复制此代码,在<code>git bash</code>中以<strong>shift+insert</strong>组合键粘贴;</li>
<li>检查是否安装成功,可输入 <code>Hexo version</code>(显示Hexo版本则安装成功);</li>
<li>遇到提示<code>Local hexo not found in ~</code>问题,继续输入:<code>npm install hexo --save</code>;</li>
</ul>
</blockquote>
<h3 id="2-新建blog文件夹"><a href="#2-新建blog文件夹" class="headerlink" title="2) 新建blog文件夹"></a>2) 新建<code>blog</code>文件夹</h3><p>方法:  </p>
<blockquote>
<p>电脑适当位置新建一个blog(也可以命名为其他,本文全使用blog代指此文件夹)文件夹,用于存放Hexo博客相关文件;  </p>
</blockquote>
<h3 id="3-在git-bash中选定blog文件夹"><a href="#3-在git-bash中选定blog文件夹" class="headerlink" title="3) 在git bash中选定blog文件夹"></a>3) 在<code>git bash</code>中选定<code>blog</code>文件夹</h3><blockquote>
<ul>
<li>选定方法一: 在该文件管理器中的该文件夹内鼠标右键点击<em>Git Bash Here</em>  </li>
<li>选定方法二: 在git bash中输入文件夹的绝对路径,eg:<code>cd c:/cusumerfiles/blog</code>( cd [blog文件夹位置] )  </li>
</ul>
</blockquote>
<h3 id="4-初始化blog文件夹"><a href="#4-初始化blog文件夹" class="headerlink" title="4) 初始化blog文件夹"></a>4) 初始化<code>blog</code>文件夹</h3><p>方法:    </p>
<blockquote>
<ul>
<li>在<code>git bash</code>中输入: <code>hexo init</code><br>ATT: </li>
<li>初始化完成后,文件夹内会多出一些文件  </li>
</ul>
</blockquote>
<h3 id="5-安装npm"><a href="#5-安装npm" class="headerlink" title="5) 安装npm"></a>5) 安装npm</h3><p>方法:    </p>
<blockquote>
<ul>
<li>在<code>git bash</code>中输入: <code>npm install</code>    </li>
</ul>
</blockquote>
<p>至此,Hexo安装完成  </p>
<h3 id="6-在本地预览博客效果"><a href="#6-在本地预览博客效果" class="headerlink" title="6) 在本地预览博客效果"></a>6) 在本地预览博客效果</h3><p>方法:    </p>
<blockquote>
<ul>
<li>在<code>git bash</code>中输入: <code>hexo server</code></li>
<li>在浏览器中打开 <strong> <a href="http://loacalhost:4000" target="_blank" rel="external">http://loacalhost:4000</a> </strong> 即可预览默认博客页面</li>
<li>在git Bash中输入<em>ctrl+c</em>退出预览</li>
</ul>
</blockquote>
<h2 id="三-Hexo的基本配置"><a href="#三-Hexo的基本配置" class="headerlink" title="三. Hexo的基本配置"></a>三. Hexo的基本配置</h2><p>此配置涉及到<strong>网址</strong>,<strong>网站名称</strong>,<strong>拥有者</strong>,<strong>文章发布形式</strong>等信息.<br>方法:  </p>
<blockquote>
<ul>
<li>在Blog根目录下,找到_config.yml文件.使用文本编辑器打开(推荐使用<a href="https://notepad-plus-plus.org" title="notepad++" target="_blank" rel="external">notepad++</a>或者<a href="http://www.sublimetext.com/" title="sublime" target="_blank" rel="external">sublime Text 3</a>软件)进行设置,具体方法见本站:<a href="https://duruonanni.github.io/blog/Hexo站点设置/20170508/" title="Hexo站点设置">Hexo站点设置</a></li>
</ul>
</blockquote>
<h2 id="四-Hexo主题设置"><a href="#四-Hexo主题设置" class="headerlink" title="四.    Hexo主题设置"></a>四.    Hexo主题设置</h2><p>Hexo的特点就是拥有许多或清新或绚丽的主题(自带的主题名称叫<code>landscape</code>),选择一款中意的主题,进行一些简单的设置,就能让博客更加赏心悦目.以下是主题设置的方法,本文以<code>NexT</code>主题为例设置:  </p>
<h3 id="1-进入Hexo官方主题商店预览-选定喜欢的主题"><a href="#1-进入Hexo官方主题商店预览-选定喜欢的主题" class="headerlink" title="1) 进入Hexo官方主题商店预览,选定喜欢的主题"></a>1) 进入<a href="https://hexo.io/themes/" title="Hexo官方主题商店" target="_blank" rel="external">Hexo官方主题商店</a>预览,选定喜欢的主题</h3><blockquote>
<ul>
<li>以NexT主题为例 主题详情页: <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">http://theme-next.iissnan.com/getting-started.html</a></li>
<li>主题样式预览页: <a href="http://notes.iissnan.com/" target="_blank" rel="external">http://notes.iissnan.com/</a>  </li>
</ul>
</blockquote>
<h3 id="2-NexT主题安装"><a href="#2-NexT主题安装" class="headerlink" title="2) NexT主题安装"></a>2) NexT主题安装</h3><blockquote>
<ul>
<li>在将<code>git bash</code>定位到blog文件夹,键入:<br>  <code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code>.<br>  成功则将会在blog-&gt;themes文件夹下新建next文件夹  </li>
<li>ATT: 务必保存一个next文件夹内的 <code>_config.yml</code>文件备份.  </li>
</ul>
</blockquote>
<h3 id="3-NexT主题启用"><a href="#3-NexT主题启用" class="headerlink" title="3) NexT主题启用"></a>3) NexT主题启用</h3><blockquote>
<ul>
<li><p>使用文本编辑器打开<code>blog</code>下的<code>config.yml</code>,找到<code>theme</code>字段,将原始值<code>landscape</code>用<code>#</code>注释掉(方便今后需要时候找回),新建主题<code>theme: next</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 主题</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">#theme: false #禁用主题</div><div class="line">#theme: landscape #默认主题</div><div class="line">theme: next</div></pre></td></tr></table></figure>
</li>
<li><p>ATT: 在切换主题之后,验证之前,最好使用<code>hexo clean</code> 来清除Hexo的缓存  </p>
</li>
</ul>
</blockquote>
<h3 id="4-调试新主题"><a href="#4-调试新主题" class="headerlink" title="4) 调试新主题"></a>4) 调试新主题</h3><blockquote>
<ul>
<li>使用Hexo的本地调试模式验证新主题效果,在<code>git bash</code>中输入:  <pre><code>`hexo server --debug`
</code></pre></li>
<li>在浏览器打开: <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 验证主题是否正常使用  </li>
<li>调试完成后,在<code>git bash</code>中键入<code>ctrl+c</code>快捷键组合取消调试</li>
</ul>
</blockquote>
<h3 id="5-主题详细设置"><a href="#5-主题详细设置" class="headerlink" title="5) 主题详细设置"></a>5) 主题详细设置</h3><blockquote>
<ul>
<li>详见<a href="http://theme-next.iissnan.com/getting-started.html" title="NexT主题文档" target="_blank" rel="external">Next主题的官方文档</a>  </li>
<li>之后我也会写一个自己站点的主题设置方案,暂时todo list 吧~</li>
<li>ATT: </li>
<li>在设置主题时,可打开了Hexo本地调试模式(<code>hexo server --debug</code>),在设定主题效果后,即刻保存相应的config.yml文件并刷新浏览器,可在浏览器即刻上预览更改的效果.取消调试在在<code>git bash</code>中键入<code>ctrl+c</code>快捷键  </li>
</ul>
</blockquote>
<h2 id="五-Hexo插件设置"><a href="#五-Hexo插件设置" class="headerlink" title="五. Hexo插件设置"></a>五. Hexo插件设置</h2><p>通过插件可为站点添加: <strong>显示运行时间</strong>,<strong>日历</strong>,<strong>添加RSS</strong>,<strong>添加友链</strong>等功能.  </p>
<blockquote>
<ul>
<li>hexo插件位于: blog/node_modules 目录下</li>
<li>官方插件详情地址是: <a href="http://hexo.io/plugins/" target="_blank" rel="external">http://hexo.io/plugins/</a>  </li>
</ul>
</blockquote>
<h2 id="六-将网站托管到Github-pages"><a href="#六-将网站托管到Github-pages" class="headerlink" title="六. 将网站托管到Github pages"></a>六. 将网站托管到<code>Github pages</code></h2><p><a href="https://github.com" title="github" target="_blank" rel="external">Github</a>是全球最大的开源程序托管平台,有无数极具创造力和分享精神的<code>Programmers</code> &amp; <code>Engineers</code>在上面创造改变世界的代码.<!--是为数不多的,即便是我国环境下也能顺畅访问的大网站.--><br><a href="https://pages.github.com" title="github pages" target="_blank" rel="external">GitHub pages</a>是<code>github</code>上一个项目,他允许用户实时展示自己的网站与正在进行的项目.<br>我们就将使用<code>GitHub pages</code>对我们本地创建好的<code>Hexo</code>博客网站进行托管和发布.<br>操作完成后,任何人就都可以通过域名在互联网上访问你的网站了. </p>
<h3 id="1-注册github账号"><a href="#1-注册github账号" class="headerlink" title="1) 注册github账号"></a>1) 注册github账号</h3><blockquote>
<p>直接进入<a href="https://github.com" title="github" target="_blank" rel="external">Github</a>官网,使用邮箱注册账号即可.<br>ATT:<br>    慎重填写<code>Github账号名</code>,这会是你的网站域名.  </p>
</blockquote>
<h3 id="2-配置SSH-keys-建立本地与github的联系"><a href="#2-配置SSH-keys-建立本地与github的联系" class="headerlink" title="2) 配置SSH keys(建立本地与github的联系)"></a>2) 配置SSH keys(建立本地与github的联系)</h3><h4 id="①-检查SSH-keys设置"><a href="#①-检查SSH-keys设置" class="headerlink" title="① 检查SSH keys设置"></a>① 检查SSH keys设置</h4><blockquote>
<p>ps: <strong>以下所有的<em>输入</em>均指在<code>git bash</code>中输入</strong>,输入完成请记得<strong>回车</strong>  </p>
<p>在<code>git bash</code>输入:<em>cd ~/.ssh</em>  </p>
</blockquote>
<h4 id="②-生成SSH-key-输入-ssh-keygen-t-rsa-C-“邮件地址-youremail-com”"><a href="#②-生成SSH-key-输入-ssh-keygen-t-rsa-C-“邮件地址-youremail-com”" class="headerlink" title="② 生成SSH key 输入: ssh-keygen -t rsa -C “邮件地址@youremail.com”"></a>② 生成SSH key 输入: ssh-keygen -t rsa -C “邮件地址@youremail.com”</h4><blockquote>
<p>ATT:<br>注意此处区分大小写,那个<code>C</code>是大写  </p>
<p>首次连接会出现key fingerprint警告,输入yes继续<br><code>Enter file in which to save the key (/c/Users/Administrator/.ssh/id_rsa)</code><br>此处意思是选择密匙存放位置,默认即可,回车继续<br><code>Enter passphrase (empty for no passphrase)</code><br>公匙密码,不需要密码则直接回车</p>
<ul>
<li>若输入了密码,在此处以及确认密码输入时都不会显示明文密码(应该是保护隐私的缘故),继续输入即可.  </li>
<li>请牢记此密码,这是每次发布博客都需要用到的.  </li>
</ul>
<p><code>Enter same passphrase again</code><br>重复确认密码,不需要则直接回车<br><code>Your identification has been saved in /c/Users/Administrator/.ssh/id_rsa.</code><br>私钥保存路径,回车<br><code>Your public key has been saved in /c/Users/Administrator/.ssh/id_rsa.pub.</code><br>公钥保存路径,回车<br>出现 <code>The key fingerprint is:&amp; The key&#39;s randomart image is</code> 说明配置成功<br>出现 <code>You&#39;ve successfully authenticated</code> 则自此配置成功.  </p>
</blockquote>
<h3 id="3-在Github创建-GitHub-Pages-项目"><a href="#3-在Github创建-GitHub-Pages-项目" class="headerlink" title="3) 在Github创建 GitHub Pages 项目"></a>3) 在Github创建 <code>GitHub Pages</code> 项目</h3><h4 id="①-新建仓库"><a href="#①-新建仓库" class="headerlink" title="① 新建仓库"></a>① 新建仓库</h4><blockquote>
<p>方法: 打开浏览器上建好的<code>github</code>账号主页 击右上角+号选择 <code>new reponsitory</code> .(新建仓库)<br><strong>ATT</strong>: 仓库名称<strong>只能</strong>是<code>username.github.io</code>(username为你创建账号的名字,必须完全一致)  </p>
</blockquote>
<h4 id="②-向github添加SSH公匙"><a href="#②-向github添加SSH公匙" class="headerlink" title="② 向github添加SSH公匙"></a>② 向github添加SSH公匙</h4><blockquote>
<p>方法:</p>
<ol>
<li>找到<strong>2)</strong>中配置公匙的路径(参见本文中的默认路径即可),用文本编辑器打开并复制 <code>id_rsa.pub</code>文件中的所有内容.  </li>
<li>打开浏览器中的Github个人主页,依次点击:<code>Settings</code>—&gt;<code>SSH keys</code>—&gt;<code>Add SSH key</code>  </li>
<li>在Title文本框中输入任意字符,在key文本框中粘贴刚才复制的公匙,保存.自此,操作完成.  </li>
</ol>
</blockquote>
<h4 id="③-测试链接"><a href="#③-测试链接" class="headerlink" title="③ 测试链接"></a>③ 测试链接</h4><blockquote>
<p>在git bash中输入: <code>ssh -T git@github.com</code><br>首次连接会出现密钥指纹警告，输入<code>yes</code>回车即可<br>显示 <code>You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>则操作成功  </p>
</blockquote>
<h3 id="4-在Github中创建项目"><a href="#4-在Github中创建项目" class="headerlink" title="4) 在Github中创建项目"></a>4) 在<code>Github</code>中创建项目</h3><h4 id="①-向Hexo安装插件-hexo-deployer-git"><a href="#①-向Hexo安装插件-hexo-deployer-git" class="headerlink" title="① 向Hexo安装插件 hexo-deployer-git"></a>① 向Hexo安装插件 <code>hexo-deployer-git</code></h4><blockquote>
<p>说明: 此插件用于向GitHub部署静态页面<br>方法: 输入: <code>npm install hexo-deployer-git --save</code>  </p>
</blockquote>
<h4 id="②-修改-config-yml文件"><a href="#②-修改-config-yml文件" class="headerlink" title="② 修改_config.yml文件"></a>② 修改<code>_config.yml</code>文件</h4><blockquote>
<p>用文本编辑器打开blog文件夹中的 config.yml文件,下拉至最后找到deploy栏,进行如下修改:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">deploy:  </div><div class="line">   type: git (部署类型若有问题，其他类型自行google之)  </div><div class="line">   repository: https://github.com/yourname/yourname.github.io.git  </div><div class="line">   (yourname改成你的项目名,注意两个名字必须一致)  </div><div class="line">   branch: master</div><div class="line">   plugins: -hexo-generator-feed</div></pre></td></tr></table></figure></p>
<p>改完成后保存  </p>
</blockquote>
<h4 id="③-部署网页"><a href="#③-部署网页" class="headerlink" title="③ 部署网页"></a>③ 部署网页</h4><blockquote>
<p>在 git bash 中输入: hexo generate    回车(生成静态网页)<br>在 git bash 继续输: hexo deploy    回车(开始部署网站)  </p>
</blockquote>
<h4 id="④-通过浏览器确定是否部署成功"><a href="#④-通过浏览器确定是否部署成功" class="headerlink" title="④ 通过浏览器确定是否部署成功"></a>④ 通过浏览器确定是否部署成功</h4><blockquote>
<p>在浏览器地址栏输入: <a href="http://yourname.github.io" target="_blank" rel="external">http://yourname.github.io</a>    (yourname为你的项目名)<br>显示hexo默认界面则成功</p>
</blockquote>
<!--参考文献:(不会出现在正文里)-->
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在之前的话&quot;&gt;&lt;a href=&quot;#写在之前的话&quot; class=&quot;headerlink&quot; title=&quot;写在之前的话&quot;&gt;&lt;/a&gt;写在之前的话&lt;/h2&gt;&lt;p&gt;本文是笔者在搭建本站时收集记录的建站过程.在搭建过程中,由于相关知识的匮缺,看不懂一些教程中省略的部分或是一
    
    </summary>
    
      <category term="hexo" scheme="http://duruonanni.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo站点设置</title>
    <link href="http://duruonanni.github.io/blog/Hexo%E7%AB%99%E7%82%B9%E8%AE%BE%E7%BD%AE/20170508/"/>
    <id>http://duruonanni.github.io/blog/Hexo站点设置/20170508/</id>
    <published>2017-05-08T11:25:01.000Z</published>
    <updated>2017-05-23T12:11:55.071Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在之前的话"><a href="#写在之前的话" class="headerlink" title="写在之前的话"></a>写在之前的话</h2><p>本文适用于已通过各路Hexo教程完成建站,需要了解Hexo站点设置的同学.若尚未完成建站,请先行阅读’<todo:建站流程记录>‘.<br>本文内容主要参考了Setsuna’s Blog:<a href="http://www.isetsuna.com/hexo/install-config/" title="Hexo博客系列" target="_blank" rel="external">Hexo博客系列</a>,张学志の博客:<a href="http://blog.csdn.net/xuezhisdc/article/details/53130383" title="hexo配置教程" target="_blank" rel="external">hexo配置教程</a>,<a href="https://hexo.io/zh-cn/docs/configuration.html" title="hexo官方文档" target="_blank" rel="external">hexo官方文档</a>.在此一并感谢~</todo:建站流程记录></p>
<p>由于笔者也是前端与建站的初学者,技浅才疏.如有错误或不足,还望批评指正~</p>
<h2 id="一-Blog文件夹详解"><a href="#一-Blog文件夹详解" class="headerlink" title="一. Blog文件夹详解"></a>一. Blog文件夹详解</h2><!--参考:https://hexo.io/zh-cn/docs/setup.html -->
<h3 id="建站成功后-Blog文件夹内可见如下目录"><a href="#建站成功后-Blog文件夹内可见如下目录" class="headerlink" title="建站成功后,Blog文件夹内可见如下目录:"></a>建站成功后,Blog文件夹内可见如下目录:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml 	# Hexo的配置文件</div><div class="line">├── package.json 	# Hexo版本信息及插件信息</div><div class="line">├── .deploy_git 	# </div><div class="line">├── node_modules 	# </div><div class="line">├── public 	# 存放souce文件夹解析出的文件</div><div class="line">├── scaffolds 	# 模板文件夹</div><div class="line">├── source 	# 资源文件夹</div><div class="line">|   ├── _drafts # 存放md格式的草稿文章,默认不发布草稿</div><div class="line">|   └── _posts # 存放用于发布的md格式文章</div><div class="line">└── themes 	# 主题文件</div></pre></td></tr></table></figure>
<h2 id="二-Hexo的-config-yml配置详解"><a href="#二-Hexo的-config-yml配置详解" class="headerlink" title="二. Hexo的_config.yml配置详解"></a>二. Hexo的_config.yml配置详解</h2><!-- 参考1:https://hexo.io/zh-cn/docs/configuration.html -->
<!--参考2:http://blog.csdn.net/xuezhisdc/article/details/53130383 -->
<h3 id="配置前的说明"><a href="#配置前的说明" class="headerlink" title="配置前的说明:"></a>配置前的说明:</h3><blockquote>
<ul>
<li>Hexo的_config.yml的储存位置: blog/_config.yml;</li>
<li>在改动配置前,请务必保存一份原始配置,确保出现故障可及时还原;</li>
<li>在配置文件时,冒号后面一定要加一个空格才能识别;</li>
<li>为方便对配置进行二次设置,可使用<code>#</code>对配置内容进行注释  <!--一个句子后加两个空格换行有效 --></li>
</ul>
</blockquote>
<h3 id="我的配置如下"><a href="#我的配置如下" class="headerlink" title="我的配置如下"></a>我的配置如下</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration 配置文件</div><div class="line">## Docs: https://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"></div><div class="line"># Site 网站标题</div><div class="line">title: 杜若喃呢</div><div class="line"># 网站副标题</div><div class="line">subtitle: 山中人兮芳杜若</div><div class="line"># 网站描述</div><div class="line">description: Life is a gift,never take it for granted.</div><div class="line"># 网站作者</div><div class="line">author: Xiangyu Kong</div><div class="line"># 网站语言:需要主题支持</div><div class="line">language: zh-Hans</div><div class="line"># 时区,默认电脑本地时区</div><div class="line">timezone: Asia/Shanghai</div><div class="line"></div><div class="line"># URL 网址</div><div class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class="line"># 网址</div><div class="line">url: http://duruonanni.github.io</div><div class="line"># 网站根目录.如果网站本身就在根目录下(比如我这样),不管他</div><div class="line">root: /</div><div class="line"># 网站生成文件格式</div><div class="line">permalink: blog/:title/:year:month:day/</div><div class="line">permalink_defaults:</div><div class="line"></div><div class="line"># Directory 配置目录名(通常没必要修改)</div><div class="line"># 资源文件夹，放在里面的文件会上传到github中</div><div class="line">source_dir: source</div><div class="line"># 公共文件夹，存放生成的静态文件</div><div class="line">public_dir: public</div><div class="line"># 标签文件夹，默认是tags.实际存放在source/tags中</div><div class="line">tag_dir: tags</div><div class="line"># 档案文件夹，默认是archives</div><div class="line">archive_dir: archives</div><div class="line"># 类别文件夹，默认是categories.实际存放在source/categories中</div><div class="line">category_dir: categories</div><div class="line"># 代码文件夹，默认是downloads/code</div><div class="line">code_dir: downloads/code</div><div class="line"># 语言文件夹,默认跟language相同</div><div class="line">i18n_dir: :lang</div><div class="line"># 不需要渲染的文件,可使用glob表达式来匹配路径。</div><div class="line">skip_render: [Readme.md]</div><div class="line"></div><div class="line"># Writing 文章内容</div><div class="line"># File name of new posts 新文章名称</div><div class="line">new_post_name: :title.md</div><div class="line"># 默认布局 除了post外,Hexo默认还支持page和draft布局</div><div class="line">default_layout: post</div><div class="line"># Transform title into titlecase 把标题转换为 titlecase</div><div class="line">titlecase: false</div><div class="line"># 新标签打开方式,true是打开一个外部链接</div><div class="line">external_link: true</div><div class="line"># 转换文件名,值为0不转,1小写,2大写</div><div class="line">filename_case: 0</div><div class="line"># 显示草稿</div><div class="line">render_drafts: false</div><div class="line"># 启用 Asset 文件夹</div><div class="line">post_asset_folder: false</div><div class="line"># 把链接改为与根目录的相对位址</div><div class="line">## 默认情况下，Hexo生成的超链接都是绝对地址.通常情况下，建议如此</div><div class="line">relative_link: false</div><div class="line"># 显示未来的文章</div><div class="line">future: true</div><div class="line"># 代码高亮</div><div class="line">highlight:</div><div class="line">  enable: true</div><div class="line">  line_number: true</div><div class="line">  auto_detect: false</div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag 分类 &amp; 标签</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Date / Time format 日期 / 时间格式 </div><div class="line">## Hexo 使用 Moment.js 来解析和显示时间</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: HH:mm:ss</div><div class="line"></div><div class="line"># Pagination 分页</div><div class="line"># 0则关闭分页功能,全部在1页</div><div class="line">## Set per_page to 0 to disable pagination 设置每页显示文章量</div><div class="line">per_page: 10</div><div class="line">## 分页路径，在public中可以看到</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Extensions 扩展插件</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">plugins: </div><div class="line"># 生成RSS的插件</div><div class="line"> -hexo-generator-feed</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line"># 主题</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">#theme: false #禁用主题</div><div class="line">#theme: landscape #默认主题</div><div class="line">theme: next</div><div class="line"></div><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line"></div><div class="line"># 发布</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  # 部署到github上</div><div class="line">  repository: https://github.com/duruonanni/duruonanni.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<h2 id="三-Hexo常用指令"><a href="#三-Hexo常用指令" class="headerlink" title="三. Hexo常用指令"></a>三. Hexo常用指令</h2><blockquote>
<p>ATT: </p>
<ul>
<li>以下指令建议在<code>Git bash</code>中操作,不建议用CMD;  </li>
</ul>
</blockquote>
<h3 id="1-init-初始化一个网站"><a href="#1-init-初始化一个网站" class="headerlink" title="1. init # 初始化一个网站"></a>1. init # 初始化一个网站</h3><blockquote>
<p>语法:     <code>hexo init [folder]</code><br>说明:     <code>folder</code> 是网站在本地储存使用的文件夹名,我用的是blog<br>ATT:  </p>
<ul>
<li>一旦配置好_config.yml文件,请不要轻易在blog文件夹使用该命令,这会导致配置文件重置;</li>
<li>在操作中输入folder内容时不用加<code>[]</code>符号,下面的所有指令中的<code>[]</code>,<code>&lt;&gt;</code>也不需要加;</li>
<li>如果需要输入的指令内容(eg: 文章名)包含空格,可用<code>-</code>替代或将所有内容用<code>&#39;&#39;</code>包起来;  </li>
<li>使用此语法前,请先将’Git bash’定位到该用于存储blog文件的文件夹中</li>
</ul>
</blockquote>
<h3 id="2-generate-生成网站的静态文件"><a href="#2-generate-生成网站的静态文件" class="headerlink" title="2. generate # 生成网站的静态文件"></a>2. generate # 生成网站的静态文件</h3><blockquote>
<p>语法:     <code>hexo generate</code><br>说明:     可简写成 <code>hexo g</code></p>
</blockquote>
<h3 id="3-new-新建文章"><a href="#3-new-新建文章" class="headerlink" title="3. new # 新建文章"></a>3. new # 新建文章</h3><blockquote>
<p>语法:     <code>hexo new &lt;title&gt;</code><br>说明: </p>
<ul>
<li><code>title</code>写文章名</li>
<li>此语法默认会将新建的文章放到<em>blog–souce–_posts</em>文件夹中,你可以在新建的文章中使用Markdown语法编辑内容,最终<em>_posts</em>文件夹中的文章会默认以时间顺序发布到你的网站上面.<br>ATT: </li>
<li>这里更推荐以<code>发表草稿</code>的方式新建文章,具体方法如下:<br>– 使用语法: <code>hexo new draft &lt;title&gt;</code> 将文章新建到<em>blog–souce–_drafts</em>文件夹中,你可以在此处对文章进行编辑.待确认发布时,使用语法:<code>hexo publish draft &lt;filename&gt;</code>,可将选定的文章传到<em>_posts</em>文件夹.<br>– 这样的好处是,可以先给文章打好草稿,直接推送写好的成品.可避免未写完的文章放到电脑其他位置弄乱弄丢.(不建议直接在<em>_posts</em>文件夹中编辑文章)  </li>
</ul>
</blockquote>
<h3 id="4-server-启动服务器"><a href="#4-server-启动服务器" class="headerlink" title="4. server # 启动服务器"></a>4. server # 启动服务器</h3><blockquote>
<p>语法:     <code>hexo server</code> 可简写成 <code>hexo s</code><br>说明:     启动服务器,使站点可在网址:<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>  预览站点.按<em>ctrl+c</em>结束预览<br>ATT:</p>
<ul>
<li>启用此语法后,能看到站点中你事先编辑好的内容,此时改变blog文件夹中内容不会在站点内体现,需要退出后再次启动才能看到变动.</li>
<li>为实时对站点内容进行调整,可使用语法:<code>hexo server --debug</code>进入本地调试模式,并将调试日志写入<em>debug.log</em>文件中.此时做出的所有调整都能在网站上动态体现.</li>
</ul>
</blockquote>
<h3 id="5-deoloy-部署网站"><a href="#5-deoloy-部署网站" class="headerlink" title="5. deoloy # 部署网站"></a>5. deoloy # 部署网站</h3><blockquote>
<p>语法:     <code>hexo deploy</code> 可简写成 <code>hexo d</code><br>说明:     将站点内容部署到服务器上,使所有人能通过域名访问新发布的文章<br>ATT:     建议使用 ‘hexo d -g’ 语法,在部署之前预先生成静态文件.</p>
</blockquote>
<p>至此:完  </p>
<p><img src="http://storage.live.com/items/AEE68C12565C1619!174679:/YuYu Hakusho.jpg?authkey=AJoh90nl3u6Wj4U" alt="YoYo hakuso"></p>
<p><img src="/path/to/images/YuYuHakusho.jpg" alt="YuYu Hakusho"><br><!--参考:(不会出现在正文里)--></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写在之前的话&quot;&gt;&lt;a href=&quot;#写在之前的话&quot; class=&quot;headerlink&quot; title=&quot;写在之前的话&quot;&gt;&lt;/a&gt;写在之前的话&lt;/h2&gt;&lt;p&gt;本文适用于已通过各路Hexo教程完成建站,需要了解Hexo站点设置的同学.若尚未完成建站,请先行阅读’&lt;to
    
    </summary>
    
      <category term="hexo" scheme="http://duruonanni.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://duruonanni.github.io/blog/hello-world/20170504/"/>
    <id>http://duruonanni.github.io/blog/hello-world/20170504/</id>
    <published>2017-05-04T14:50:41.679Z</published>
    <updated>2017-05-08T11:13:08.181Z</updated>
    
    <content type="html"><![CDATA[<p>In C# we say:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">static void Main(string[] args)</div><div class="line">&#123;</div><div class="line">	Console.Writeline(&quot;Hello world&quot;);</div><div class="line">	Console.Readkey();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>In HTML we say:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">	&lt;head&gt;&lt;/head&gt;</div><div class="line">	&lt;body&gt;</div><div class="line">	Hello world</div><div class="line">	&lt;/body&gt;</div><div class="line">&lt;/htme&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In C# we say:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;di
    
    </summary>
    
    
  </entry>
  
</feed>
